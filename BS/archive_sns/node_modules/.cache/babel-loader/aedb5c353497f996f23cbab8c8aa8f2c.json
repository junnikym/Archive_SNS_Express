{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\solar\\\\Documents\\\\GitHub\\\\ARCHIVE_SNS\\\\src\\\\components\\\\App\\\\presenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../Auth\";\nimport Setting from \"../Setting\"; // for temp\n\nconst App = props => [props.isLoggedIn ? /*#__PURE__*/_jsxDEV(Setting, {}, 1, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 23\n}, this) : /*#__PURE__*/_jsxDEV(PublicRoutes, {}, 1, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 44\n}, this) // props.isLoggedIn ? <Navigation key={1} /> : null,\n// props.isLoggedIn ? <PrivateRoutes key={2} /> : <PublicRoutes key={2} />,\n// <Footer key={3} />\n];\n\n_c = App;\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n}; // const PrivateRoutes = props => (\n//   <Switch>\n//     <Route exact path=\"/\" render={() => \"recover password\"} />\n//   </Switch>\n// );\n\nconst PublicRoutes = props => /*#__PURE__*/_jsxDEV(Switch, {\n  children: /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/\",\n    component: Auth\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\n_c2 = PublicRoutes;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PublicRoutes\");","map":{"version":3,"sources":["C:/Users/solar/Documents/GitHub/ARCHIVE_SNS/src/components/App/presenter.js"],"names":["React","PropTypes","Route","Switch","Auth","Setting","App","props","isLoggedIn","propTypes","bool","isRequired","PublicRoutes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAAkC;;AAElC,MAAMC,GAAG,GAAGC,KAAK,IAAI,CACnBA,KAAK,CAACC,UAAN,gBAAoB,QAAC,OAAD,MAAc,CAAd;AAAA;AAAA;AAAA;AAAA,QAApB,gBAAyC,QAAC,YAAD,MAAmB,CAAnB;AAAA;AAAA;AAAA;AAAA,QADtB,CAEnB;AACA;AACA;AAJmB,CAArB;;KAAMF,G;AAONA,GAAG,CAACG,SAAJ,GAAgB;AACdD,EAAAA,UAAU,EAAEP,SAAS,CAACS,IAAV,CAAeC;AADb,CAAhB,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGL,KAAK,iBACxB,QAAC,MAAD;AAAA,yBACE,QAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMQ,Y;AAON,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Auth from \"../Auth\";\nimport Setting from \"../Setting\"; // for temp\n\nconst App = props => [\n  props.isLoggedIn ?  <Setting key={1}/> : <PublicRoutes key={1} />,\n  // props.isLoggedIn ? <Navigation key={1} /> : null,\n  // props.isLoggedIn ? <PrivateRoutes key={2} /> : <PublicRoutes key={2} />,\n  // <Footer key={3} />\n];\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n};\n\n// const PrivateRoutes = props => (\n//   <Switch>\n//     <Route exact path=\"/\" render={() => \"recover password\"} />\n//   </Switch>\n// );\n\nconst PublicRoutes = props => (\n  <Switch>\n    <Route exact path=\"/\" component={Auth} />\n    {/* <Redirect path=\"*\" to=\"/\" /> */}\n  </Switch>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
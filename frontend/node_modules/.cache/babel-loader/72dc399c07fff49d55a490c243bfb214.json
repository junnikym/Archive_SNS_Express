{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from \"history\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport account from \"./modules/account\";\nconst env = process.env.NODE_ENV;\nconst history = createBrowserHistory();\nconst middlewares = [thunk, routerMiddleware(history)];\n\nif (env === \"development\") {\n  const {\n    logger\n  } = require(\"redux-logger\");\n\n  middlewares.push(logger);\n}\n\nconst reducer = combineReducers({\n  account,\n  router: connectRouter(history)\n});\nlet store;\n\nif (env === \"development\") {\n  store = initialState => createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\n} else {\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\n}\n\nexport { history };\nexport default store();","map":{"version":3,"sources":["C:/Users/solar/Documents/GitHub/ARCHIVE_SNS/src/redux/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","connectRouter","routerMiddleware","createBrowserHistory","composeWithDevTools","account","env","process","NODE_ENV","history","middlewares","logger","require","push","reducer","router","store","initialState"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAAUC,mBAAV,QAAqC,0BAArC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;AAEA,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;AAEA,MAAMO,WAAW,GAAG,CAACV,KAAD,EAAQE,gBAAgB,CAACO,OAAD,CAAxB,CAApB;;AAEA,IAAIH,GAAG,KAAK,aAAZ,EAA2B;AACzB,QAAM;AAAEK,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBF,MAAjB;AACD;;AAED,MAAMG,OAAO,GAAGjB,eAAe,CAAC;AAC9BQ,EAAAA,OAD8B;AAE9BU,EAAAA,MAAM,EAAGd,aAAa,CAACQ,OAAD;AAFQ,CAAD,CAA/B;AAKA,IAAIO,KAAJ;;AAEA,IAAIV,GAAG,KAAK,aAAZ,EAA2B;AACzBU,EAAAA,KAAK,GAAGC,YAAY,IAClBnB,WAAW,CAACgB,OAAD,EAAUV,mBAAmB,CAACL,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAA7B,CADb;AAED,CAHD,MAGO;AACLM,EAAAA,KAAK,GAAGC,YAAY,IAAInB,WAAW,CAACgB,OAAD,EAAUf,eAAe,CAAC,GAAGW,WAAJ,CAAzB,CAAnC;AACD;;AAED,SAASD,OAAT;AAEA,eAAeO,KAAK,EAApB","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from \"history\";\nimport  { composeWithDevTools } from \"redux-devtools-extension\";\nimport account from \"./modules/account\";\n\nconst env = process.env.NODE_ENV;\n\nconst history = createBrowserHistory();\n\nconst middlewares = [thunk, routerMiddleware(history)];\n\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst reducer = combineReducers({\n  account,\n  router : connectRouter(history),\n});\n\nlet store;\n\nif (env === \"development\") {\n  store = initialState =>\n    createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\n} else {\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\n}\n\nexport { history };\n\nexport default store();\n"]},"metadata":{},"sourceType":"module"}